dashboard. html 

{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Student Table</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-grid.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-theme-alpine.css" />
  <link rel="stylesheet" href="{% static 'css/dashboard.css' %}">
  <style>
    body {
      margin: 0;
      font-family: sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: #f4f4f4;
      padding: 20px;
      box-sizing: border-box;
    }

    .add-btn-container {
      width: 90%;
      display: flex;
      justify-content: flex-end;
      margin-bottom: 20px;
    }

    .add-btn {
      padding: 15px 30px;
      background-color: #1976d2;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 1.2em;
    }

    .add-btn:hover {
      background-color: #1565c0;
    }

    #table-section {
      display: none;
      width: 90%;
      background-color: white;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
      padding: 20px;
      box-sizing: border-box;
    }

    #table-section h2 {
      margin-top: 0;
      margin-bottom: 15px;
      color: #333;
    }

    #student-table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 15px;
    }

    #student-table th,
    #student-table td {
      padding: 10px;
      border: 1px solid #ddd;
      text-align: left;
    }

    #student-table th {
      background-color: #f0f0f0;
      font-weight: bold;
    }

    input.clean-input, select.clean-input {
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      outline: none;
      width: calc(100% - 16px);
      box-sizing: border-box;
    }

    .add-row-btn, .save-btn, .cancel-btn {
      margin-right: 10px;
      padding: 10px 18px;
      background-color: #4caf50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1em;
    }

    .cancel-btn {
      background-color: #f44336;
    }

    .add-row-btn:hover {
      background-color: #45a049;
    }

    .save-btn:hover {
      background-color: #388e3c;
    }

    .cancel-btn:hover {
      background-color: #d32f2f;
    }

    #button-container {
      margin-top: 15px;
      display: flex;
      justify-content: flex-end;
    }

    #filteredGrid, #allDataGrid {
      width: 90%;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      background-color: white;
    }

    #filteredGrid {
      height: 300px;
      margin-bottom: 20px;
    }

    #allDataGrid {
      height: 400px;
      display: none; /* Initially hidden */
    }

    #all-data-section {
      width: 90%;
    }

    #all-data-section h2 {
      color: #333;
      margin-top: 0;
      margin-bottom: 15px;
    }
  </style>
</head>
<body>
  <div class="add-btn-container">
    <button class="add-btn" onclick="showTable()">Add User</button>
  </div>

  <div id="table-section">
    <h2>Add User Details</h2>
    <table id="student-table">
      <thead>
        <tr>
          <th>Date</th>
          <th>Employee Role</th>
          <th>Task Description</th>
          <th>Planned Hours</th>
          <th>Actual Hours</th>
          <th>Code Review Status</th>
          <th>Productivity Rating</th>
          <th>Quality Testing</th>
          <th>Status</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>

    <button class="add-row-btn" onclick="addRow()">Add Row</button>

    <div id="button-container">
      <button class="save-btn" onclick="moveToAllData()">Save</button>
      <button class="cancel-btn" onclick="hideTable()">Cancel</button>
    </div>
  </div>

  <div id="filteredGrid" class="ag-theme-alpine"></div>

  <div id="all-data-section">
    <h2>All Saved Entries</h2>
    <div id="allDataGrid" class="ag-theme-alpine"></div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/ag-grid-community@31.0.1/dist/ag-grid-community.min.noStyle.js"></script>

<script>
  let filteredGridApi, allDataGridApi;
  const savedData = [];
  let currentFilteredData = [];

  const columnDefs = [
    { headerName: 'Date', field: 'date', filter: 'agDateColumnFilter', filterParams: { comparator: dateComparator } },
    { headerName: 'Employee Role', field: 'employeeName', filter: 'agTextColumnFilter' },
    { headerName: 'Task Description', field: 'taskDescription', filter: 'agTextColumnFilter' },
    { headerName: 'Planned Hours', field: 'plannedHours', filter: 'agNumberColumnFilter' },
    { headerName: 'Actual Hours', field: 'actualHours', filter: 'agNumberColumnFilter' },
    { headerName: 'Code Review Status', field: 'codeReviewStatus', filter: 'agTextColumnFilter' },
    { headerName: 'Productivity Rating', field: 'productivityRatio', filter: 'agNumberColumnFilter' },
    { headerName: 'Quality Testing', field: 'qualityTesting', filter: 'agNumberColumnFilter' },
    { headerName: 'Status', field: 'status', filter: 'agTextColumnFilter' }
  ];

  function dateComparator(filterLocalDateAtMidnight, cellValue) {
    if (cellValue == null) {
      return -1;
    }
    const cellDate = new Date(cellValue);
    if (cellDate < filterLocalDateAtMidnight) {
      return -1;
    } else if (cellDate > filterLocalDateAtMidnight) {
      return 1;
    } else {
      return 0;
    }
  }

  // Initialize ag-Grid for filtered data
  new agGrid.Grid(document.querySelector('#filteredGrid'), {
    columnDefs: columnDefs,
    rowData: [],
    onGridReady: params => {
      filteredGridApi = params.api;
      // Set initial filter for the filtered grid (optional)
      // filteredGridApi.setFilterModel({});
    },
    pagination: true,
    paginationPageSize: 5,
    domLayout: 'normal'
  });

  // Initialize ag-Grid for all saved data
  new agGrid.Grid(document.querySelector('#allDataGrid'), {
    columnDefs: columnDefs,
    rowData: [],
    onGridReady: params => {
      allDataGridApi = params.api;
    },
    pagination: true,
    paginationPageSize: 5,
    domLayout: 'normal'
  });

  function showTable() {
    document.getElementById('table-section').style.display = 'block';
    document.getElementById('filteredGrid').style.display = 'block';
    document.getElementById('all-data-section').style.display = 'none';
    document.querySelector('.add-btn-container').style.display = 'none';
    addRow();
  }

  function hideTable() {
    document.getElementById('table-section').style.display = 'none';
    document.getElementById('filteredGrid').style.display = 'none';
    document.getElementById('all-data-section').style.display = 'none';
    document.querySelector('.add-btn-container').style.display = 'flex';
  }

  function addRow() {
    const tableBody = document.querySelector('#student-table tbody');
    const row = document.createElement('tr');
    row.innerHTML = `
      <td><input type="date" class="clean-input" /></td>
      <td>
        <select class="clean-input">
          <option value="">Select</option>
          <option value="CEO">CEO</option>
          <option value="Admin">Admin</option>
          <option value="Manager">Manager</option>
          <option value="TL">TL</option>
        </select>
      </td>
      <td><input type="text" class="clean-input" /></td>
      <td><input type="number" min="1" max="1000" class="clean-input" /></td>
      <td><input type="number" min="1" max="1000" class="clean-input" /></td>
      <td>
        <select class="clean-input">
          <option value="">Select</option>
          <option value="Done">Done</option>
          <option value="Working">Working</option>
          <option value="Not Yet Started">Not Yet Started</option>
        </select>
      </td>
      <td><input type="number" min="1" max="10" value="0" class="clean-input" /></td>
      <td><input type="number" min="1" max="10" value="0" class="clean-input" /></td>
      <td><input type="text" class="clean-input" /></td>
    `;
    tableBody.appendChild(row);
  }

  function saveData() {
    const table = document.getElementById("student-table");
    const rowData = [];

    for (let i = 0; i < table.rows.length; i++) { // Start from 0 to include header for column names
      if (i === 0) continue; // Skip the header row

      const row = table.rows[i];
      const inputs = row.querySelectorAll("input, select");
      const entry = {
        date: inputs[0].value,
        employeeName: inputs[1].value,
        taskDescription: inputs[2].value,
        plannedHours: inputs[3].value,
        actualHours: inputs[4].value,
        codeReviewStatus: inputs[5].value,
        productivityRatio: inputs[6].value,
        qualityTesting: inputs[7].value,
        status: inputs[8].value
      };

      if (entry.date) {
        savedData.push(entry);
      }
    }
  }

  function moveToAllData() {
    saveData();
    document.getElementById('table-section').style.display = 'none';
    document.getElementById('filteredGrid').style.display = 'block';
    document.getElementById('all-data-section').style.display = 'block';
    document.querySelector('.add-btn-container').style.display = 'flex';

    if (allDataGridApi) {
      allDataGridApi.setRowData(savedData);
    }

    // Initially display all saved data in the filtered grid as well
    if (filteredGridApi) {
      filteredGridApi.setRowData(savedData);
    }
  }

  // Function to filter the grid by date
  function filterByDate(date) {
    if (filteredGridApi) {
      filteredGridApi.setFilterModel({
        date: { type: 'equals', dateFrom: date, dateTo: date }
      });
    }
  }

  // Generic function to filter grid columns
  function filterByColumn(value, columnName) {
    if (filteredGridApi) {
      const filterModel = filteredGridApi.getFilterModel();
      filterModel[columnName] = { type: 'contains', filter: value };
      filteredGridApi.setFilterModel(filterModel);
    }
  }
</script>

</body>
</html>







kq-https://kqproducts.net/ems/TimeLog/formTimeLog











